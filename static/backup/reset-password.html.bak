<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - SureFlights</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body class="theme-light">
    <div class="auth-container">
        <div class="auth-card">
            <a href="/" style="display: flex; align-items: center; justify-content: center; gap: 0.5rem; text-decoration: none; color: inherit; margin-bottom: 1.5rem;">
                <svg width="32" height="32" viewBox="0 0 32 32" fill="none">
                    <path d="M16 2L28 16L16 30L4 16L16 2Z" fill="#2563eb"/>
                </svg>
                <span style="font-size: 1.5rem; font-weight: 700;">SureFlights</span>
            </a>

            <h2>Set New Password</h2>
            <p style="color: var(--gray-600); margin-bottom: 1.5rem;">
                Enter your new password below.
            </p>

            <div id="loading" class="loading" style="display: none;">
                <div class="spinner"></div>
                <p>Verifying reset link...</p>
            </div>

            <div id="error" class="error-message" style="display: none;"></div>
            <div id="success" class="success-message" style="display: none;"></div>

            <form id="resetPasswordForm" style="display: none;">
                <div class="form-group">
                    <label for="password">New Password</label>
                    <input type="password" id="password" required placeholder="Enter new password (min 8 characters)" minlength="8">
                    <div class="form-error"></div>
                </div>

                <div class="form-group">
                    <label for="confirmPassword">Confirm Password</label>
                    <input type="password" id="confirmPassword" required placeholder="Confirm new password">
                    <div class="form-error"></div>
                </div>

                <button type="submit" class="btn btn-primary btn-large" id="submitBtn">
                    Reset Password
                </button>
            </form>

            <div class="auth-links">
                <a href="login.html">Back to Sign In</a>
            </div>
        </div>
    </div>

    <script src="auth.js"></script>
    <script src="main.js"></script>
    <script>
        let resetToken = null;

        // Get token from URL
        const urlParams = new URLSearchParams(window.location.search);
        resetToken = urlParams.get('token');

        if (!resetToken) {
            showError('Invalid reset link. Please request a new password reset.');
        } else {
            verifyToken();
        }

        async function verifyToken() {
            const loadingDiv = document.getElementById('loading');
            const errorDiv = document.getElementById('error');
            const form = document.getElementById('resetPasswordForm');

            loadingDiv.style.display = 'block';

            try {
                const response = await fetch(`${API_BASE}/auth/verify-reset-token?token=${encodeURIComponent(resetToken)}`);
                const data = await response.json();

                loadingDiv.style.display = 'none';

                if (response.ok && data.valid) {
                    // Show form
                    form.style.display = 'block';

                    // Enable real-time validation
                    if (typeof enableRealTimeValidation === 'function') {
                        enableRealTimeValidation(form);
                    }

                    // Add confirm password validation
                    document.getElementById('confirmPassword').addEventListener('blur', validatePasswordMatch);
                    document.getElementById('password').addEventListener('input', () => {
                        if (document.getElementById('confirmPassword').value) {
                            validatePasswordMatch();
                        }
                    });
                } else {
                    showError(data.message || 'This reset link is invalid or has expired. Please request a new one.');
                    document.querySelector('.auth-links').innerHTML = `
                        <a href="forgot-password.html">Request new reset link</a> |
                        <a href="login.html">Back to Sign In</a>
                    `;
                }
            } catch (error) {
                console.error('Token verification error:', error);
                loadingDiv.style.display = 'none';
                showError('Network error. Please check your connection and try again.');
            }
        }

        function validatePasswordMatch() {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword');
            const confirmValue = confirmPassword.value;

            if (confirmValue && password !== confirmValue) {
                showFieldError(confirmPassword, 'Passwords do not match');
                return false;
            } else if (confirmValue) {
                clearFieldError(confirmPassword);
                return true;
            }
            return true;
        }

        // Handle form submission
        document.getElementById('resetPasswordForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const form = e.target;

            // Validate form
            if (typeof validateForm === 'function' && !validateForm(form)) {
                return;
            }

            // Validate password match
            if (!validatePasswordMatch()) {
                return;
            }

            const password = document.getElementById('password').value;
            const submitBtn = document.getElementById('submitBtn');
            const errorDiv = document.getElementById('error');
            const successDiv = document.getElementById('success');

            // Hide messages
            errorDiv.style.display = 'none';
            successDiv.style.display = 'none';

            // Disable button
            submitBtn.disabled = true;
            submitBtn.textContent = 'Resetting...';

            try {
                const response = await fetch(`${API_BASE}/auth/reset-password`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        token: resetToken,
                        new_password: password
                    })
                });

                const data = await response.json();

                if (response.ok) {
                    // Show success message
                    successDiv.innerHTML = `
                        <strong>Password reset successful!</strong><br>
                        Your password has been changed. Redirecting to login...
                    `;
                    successDiv.style.display = 'block';

                    // Hide form
                    form.style.display = 'none';

                    // Redirect to login after 2 seconds
                    setTimeout(() => {
                        window.location.href = 'login.html';
                    }, 2000);
                } else {
                    errorDiv.textContent = data.detail || 'Failed to reset password. Please try again.';
                    errorDiv.style.display = 'block';
                    submitBtn.disabled = false;
                    submitBtn.textContent = 'Reset Password';
                }
            } catch (error) {
                console.error('Reset password error:', error);
                errorDiv.textContent = 'Network error. Please check your connection and try again.';
                errorDiv.style.display = 'block';
                submitBtn.disabled = false;
                submitBtn.textContent = 'Reset Password';
            }
        });

        function showError(message) {
            const errorDiv = document.getElementById('error');
            errorDiv.textContent = message;
            errorDiv.style.display = 'block';
        }
    </script>
</body>
</html>
